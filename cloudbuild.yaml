steps:
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'europe-west1-docker.pkg.dev/regrets-reporter-dev/myimage',
        '.',
      ]
  
  - id: "docker-build"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "${_IMAGE_NAME}", "sql-proxy/."]

  - id: "docker-push"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "${_IMAGE_NAME}"]

  - id: "docker-layer"
    name: "gcr.io/cloud-builders/docker"
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        echo "FROM $_IMAGE_NAME
        COPY --from=gcr.io/cloud-sql-connectors/cloud-sql-proxy /cloud-sql-proxy /cloudsql/cloud-sql-proxy" > Dockerfile-proxy;

        docker build -f Dockerfile-proxy -t ${_IMAGE_NAME}-proxy .

  # For TCP connections
  - id: "migrate-tcp"
    name: "${_IMAGE_NAME}-proxy"
    dir: sql-proxy
    env:
      - "DATABASE_NAME=${DB_NAME}"
      - "DATABASE_USER=${DB_USER}"
      - "DATABASE_HOST=${PG_HOST}"
      - "DATABASE_PORT=${PG_PORT}"
      - "DATABASE_TYPE=${PG_TYPE}"
    secretEnv:
      - DB_PASS
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        /cloudsql/cloud-sql-proxy --port ${PG_PORT} ${INSTANCE_CONNECTION_NAME} & sleep 2;

logsBucket: 'gs://regrets-reporter-loggs-bucket'
    options:
      logging: GCS_ONLY